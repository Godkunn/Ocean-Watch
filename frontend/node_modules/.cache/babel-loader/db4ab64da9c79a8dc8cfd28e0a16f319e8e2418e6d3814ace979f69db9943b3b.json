{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Desktop\\\\ocean-hazard-platform\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport Map from './components/Map';\nimport ReportForm from './components/ReportForm';\nimport Dashboard from './components/Dashboard';\nimport SocialFeed from './components/SocialFeed';\nimport './styles/App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [activeTab, setActiveTab] = useState('map');\n  const [reports, setReports] = useState([]);\n  const [socialPosts, setSocialPosts] = useState([]);\n  useEffect(() => {\n    if (token) {\n      // Fetch user data\n      fetchUserData();\n      // Fetch reports\n      fetchReports();\n      // Fetch social posts\n      fetchSocialPosts();\n    }\n  }, [token]);\n  const fetchUserData = async () => {\n    try {\n      // In a real app, you'd have an endpoint to get user data\n      // For now, we'll just decode the token\n      const payload = JSON.parse(atob(token.split('.')[1]));\n      setUser({\n        id: payload.id,\n        username: payload.username,\n        role: payload.role\n      });\n    } catch (error) {\n      console.error('Error fetching user data:', error);\n      logout();\n    }\n  };\n  const fetchReports = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/reports');\n      const data = await response.json();\n      setReports(data);\n    } catch (error) {\n      console.error('Error fetching reports:', error);\n    }\n  };\n  const fetchSocialPosts = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/social/posts', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      const data = await response.json();\n      setSocialPosts(data);\n    } catch (error) {\n      console.error('Error fetching social posts:', error);\n    }\n  };\n  const login = (userData, authToken) => {\n    setUser(userData);\n    setToken(authToken);\n    localStorage.setItem('token', authToken);\n  };\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem('token');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      user: user,\n      onLogout: logout,\n      activeTab: activeTab,\n      setActiveTab: setActiveTab\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: !user ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-forms\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: async e => {\n              e.preventDefault();\n              const formData = new FormData(e.target);\n              const email = formData.get('email');\n              const password = formData.get('password');\n              try {\n                const response = await fetch('http://localhost:5000/api/auth/login', {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    email,\n                    password\n                  })\n                });\n                const data = await response.json();\n                if (response.ok) {\n                  login(data.user, data.token);\n                } else {\n                  alert(data.message);\n                }\n              } catch (error) {\n                console.error('Login error:', error);\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              name: \"email\",\n              placeholder: \"Email\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"password\",\n              placeholder: \"Password\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: async e => {\n              e.preventDefault();\n              const formData = new FormData(e.target);\n              const username = formData.get('username');\n              const email = formData.get('email');\n              const password = formData.get('password');\n              const role = formData.get('role');\n              try {\n                const response = await fetch('http://localhost:5000/api/auth/register', {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    username,\n                    email,\n                    password,\n                    role\n                  })\n                });\n                const data = await response.json();\n                if (response.ok) {\n                  login(data.user, data.token);\n                } else {\n                  alert(data.message);\n                }\n              } catch (error) {\n                console.error('Registration error:', error);\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"username\",\n              placeholder: \"Username\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              name: \"email\",\n              placeholder: \"Email\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"password\",\n              placeholder: \"Password\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"role\",\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"citizen\",\n                children: \"Citizen\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"official\",\n                children: \"Official\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"analyst\",\n                children: \"Analyst\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [activeTab === 'map' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"map-container\",\n          children: [/*#__PURE__*/_jsxDEV(Map, {\n            reports: reports,\n            socialPosts: socialPosts\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ReportForm, {\n            onReportSubmit: fetchReports,\n            token: token\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 15\n        }, this), activeTab === 'dashboard' && /*#__PURE__*/_jsxDEV(Dashboard, {\n          reports: reports,\n          userRole: user.role\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 15\n        }, this), activeTab === 'social' && /*#__PURE__*/_jsxDEV(SocialFeed, {\n          posts: socialPosts,\n          token: token\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5ns0YNBr8wfS6hJ53tuHqOBTvcw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","Map","ReportForm","Dashboard","SocialFeed","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","user","setUser","token","setToken","localStorage","getItem","activeTab","setActiveTab","reports","setReports","socialPosts","setSocialPosts","fetchUserData","fetchReports","fetchSocialPosts","payload","JSON","parse","atob","split","id","username","role","error","console","logout","response","fetch","data","json","headers","login","userData","authToken","setItem","removeItem","className","children","onLogout","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","e","preventDefault","formData","FormData","target","email","get","password","method","body","stringify","ok","alert","message","type","name","placeholder","required","value","onReportSubmit","userRole","posts","_c","$RefreshReg$"],"sources":["C:/Users/Hp/Desktop/ocean-hazard-platform/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Header from './components/Header';\r\nimport Map from './components/Map';\r\nimport ReportForm from './components/ReportForm';\r\nimport Dashboard from './components/Dashboard';\r\nimport SocialFeed from './components/SocialFeed';\r\nimport './styles/App.css';\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState(null);\r\n  const [token, setToken] = useState(localStorage.getItem('token'));\r\n  const [activeTab, setActiveTab] = useState('map');\r\n  const [reports, setReports] = useState([]);\r\n  const [socialPosts, setSocialPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      // Fetch user data\r\n      fetchUserData();\r\n      // Fetch reports\r\n      fetchReports();\r\n      // Fetch social posts\r\n      fetchSocialPosts();\r\n    }\r\n  }, [token]);\r\n\r\n  const fetchUserData = async () => {\r\n    try {\r\n      // In a real app, you'd have an endpoint to get user data\r\n      // For now, we'll just decode the token\r\n      const payload = JSON.parse(atob(token.split('.')[1]));\r\n      setUser({ id: payload.id, username: payload.username, role: payload.role });\r\n    } catch (error) {\r\n      console.error('Error fetching user data:', error);\r\n      logout();\r\n    }\r\n  };\r\n\r\n  const fetchReports = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/reports');\r\n      const data = await response.json();\r\n      setReports(data);\r\n    } catch (error) {\r\n      console.error('Error fetching reports:', error);\r\n    }\r\n  };\r\n\r\n  const fetchSocialPosts = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/social/posts', {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n      const data = await response.json();\r\n      setSocialPosts(data);\r\n    } catch (error) {\r\n      console.error('Error fetching social posts:', error);\r\n    }\r\n  };\r\n\r\n  const login = (userData, authToken) => {\r\n    setUser(userData);\r\n    setToken(authToken);\r\n    localStorage.setItem('token', authToken);\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    setToken(null);\r\n    localStorage.removeItem('token');\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header user={user} onLogout={logout} activeTab={activeTab} setActiveTab={setActiveTab} />\r\n      \r\n      <div className=\"main-content\">\r\n        {!user ? (\r\n          <div className=\"auth-forms\">\r\n            <div className=\"form-container\">\r\n              <h2>Login</h2>\r\n              <form onSubmit={async (e) => {\r\n                e.preventDefault();\r\n                const formData = new FormData(e.target);\r\n                const email = formData.get('email');\r\n                const password = formData.get('password');\r\n                \r\n                try {\r\n                  const response = await fetch('http://localhost:5000/api/auth/login', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                      'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify({ email, password })\r\n                  });\r\n                  \r\n                  const data = await response.json();\r\n                  if (response.ok) {\r\n                    login(data.user, data.token);\r\n                  } else {\r\n                    alert(data.message);\r\n                  }\r\n                } catch (error) {\r\n                  console.error('Login error:', error);\r\n                }\r\n              }}>\r\n                <input type=\"email\" name=\"email\" placeholder=\"Email\" required />\r\n                <input type=\"password\" name=\"password\" placeholder=\"Password\" required />\r\n                <button type=\"submit\">Login</button>\r\n              </form>\r\n            </div>\r\n            \r\n            <div className=\"form-container\">\r\n              <h2>Register</h2>\r\n              <form onSubmit={async (e) => {\r\n                e.preventDefault();\r\n                const formData = new FormData(e.target);\r\n                const username = formData.get('username');\r\n                const email = formData.get('email');\r\n                const password = formData.get('password');\r\n                const role = formData.get('role');\r\n                \r\n                try {\r\n                  const response = await fetch('http://localhost:5000/api/auth/register', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                      'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify({ username, email, password, role })\r\n                  });\r\n                  \r\n                  const data = await response.json();\r\n                  if (response.ok) {\r\n                    login(data.user, data.token);\r\n                  } else {\r\n                    alert(data.message);\r\n                  }\r\n                } catch (error) {\r\n                  console.error('Registration error:', error);\r\n                }\r\n              }}>\r\n                <input type=\"text\" name=\"username\" placeholder=\"Username\" required />\r\n                <input type=\"email\" name=\"email\" placeholder=\"Email\" required />\r\n                <input type=\"password\" name=\"password\" placeholder=\"Password\" required />\r\n                <select name=\"role\" required>\r\n                  <option value=\"citizen\">Citizen</option>\r\n                  <option value=\"official\">Official</option>\r\n                  <option value=\"analyst\">Analyst</option>\r\n                </select>\r\n                <button type=\"submit\">Register</button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            {activeTab === 'map' && (\r\n              <div className=\"map-container\">\r\n                <Map reports={reports} socialPosts={socialPosts} />\r\n                <ReportForm onReportSubmit={fetchReports} token={token} />\r\n              </div>\r\n            )}\r\n            \r\n            {activeTab === 'dashboard' && (\r\n              <Dashboard reports={reports} userRole={user.role} />\r\n            )}\r\n            \r\n            {activeTab === 'social' && (\r\n              <SocialFeed posts={socialPosts} token={token} />\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}